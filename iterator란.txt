* iterator란?

 - iterator란 STL 컨테이너에 저장된 요소를 반복적으로 순회하여, 각각의 요소에 대한 접근을 제공하는 객체이다.
 - 컨테이너의 구조나 요소의 타입과는 상관없이 컨테이너에 저장된 데이터를 순회하는 과정을 일반화한 표현이다.
 - 템플릿이 타입과 상관없이 알고리즘을 표현할 수 있게 해준다면, 반복자는 컨테이너와 상관없이 알고리즘을 표현할 수 있게 해준다.


* iterator가 가져야 할 요구 사항과 정의되어야 할 연산자는?

 - 가리키는 요소의 값에 접근할 수 있어야 한다. 따라서 참조 연산자(*)가 정의되어야 한다.
 - 반복자 사이의 대입 연산, 비교 연산이 가능해야 한다. 따라서 대입, 관계 연산자가 정의되어야 한다.
 - 가리키는 요소의 주변 요소로 이동할 수 있어야 한다. 따라서 증가 연산자(++)가 정의되어야 한다.
 

* 그렇다면 iterator가 STL에 존재하는 이유는 무엇인가?

 - generic programming 을 위해 존재?
 - iterator 가 없다면 vector, map, set 등 여러 컨테이너의 원소에 접근할 때 계속 각각 컨테이너의 for문을 사용해야 한다.
 - 여러 컨테이너에 접근해야 할 때 iterator로 접근하는 함수 하나만 만들면 모든 컨테이너에 접근이 가능해진다. 
 - 자료구조는 여러 개 만들고, 알고리즘은 하나로 쓸 수 있다.